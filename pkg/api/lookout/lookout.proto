syntax = 'proto3';

package lookout;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "pkg/api/queue.proto";

option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) = true;

message SystemOverview {
    repeated QueueInfo queues = 1;
}

message JobInfo {
    api.Job job = 1;
    repeated RunInfo runs = 2;
    google.protobuf.Timestamp cancelled = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
}

message RunInfo {
    string k8s_id = 1;
    string cluster = 2;
    string node = 3;
    bool succeeded = 4;
    string error = 5;
    google.protobuf.Timestamp created = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
    google.protobuf.Timestamp started = 7 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
    google.protobuf.Timestamp finished = 8 [(gogoproto.stdtime) = true, (gogoproto.nullable) = true];
}

message QueueInfo {
    string queue = 1;

    uint32 jobs_queued = 2;
    uint32 jobs_pending = 3;
    uint32 jobs_running = 4;

    JobInfo oldest_queued_job = 5;
    JobInfo longest_running_job = 6;
}

service Lookout {
    rpc Overview (google.protobuf.Empty) returns (SystemOverview) {
        option (google.api.http) = {
            get: "/api/v1/lookout/overview"
        };
    }
}
